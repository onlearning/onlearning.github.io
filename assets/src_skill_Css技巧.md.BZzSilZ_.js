import{_ as a,c as n,a2 as e,o as p}from"./chunks/framework.DPuwY6B9.js";const y=JSON.parse('{"title":"CSS 技巧","description":"","frontmatter":{},"headers":[],"relativePath":"src/skill/Css技巧.md","filePath":"src/skill/Css技巧.md","lastUpdated":1714114110000}'),l={name:"src/skill/Css技巧.md"};function o(c,s,r,t,d,i){return p(),n("div",null,s[0]||(s[0]=[e(`<h1 id="css-技巧" tabindex="-1">CSS 技巧 <a class="header-anchor" href="#css-技巧" aria-label="Permalink to &quot;CSS 技巧&quot;">​</a></h1><p>浏览器私有前缀</p><p><code>-moz-</code> 火狐</p><p><code>-ms-</code> IE</p><p><code>-webkit-</code> safari chrome</p><p><code>-o-</code> opera</p><h2 id="清除浮动" tabindex="-1">清除浮动 <a class="header-anchor" href="#清除浮动" aria-label="Permalink to &quot;清除浮动&quot;">​</a></h2><p>1、额外标签法：（在最后一个子元素浮动标签后，新加一个标签，给其 css 设置 <code>clear:both</code>）</p><p>缺点：添加无意义标签，语义化差，不推荐</p><p>2、父级添加 <code>overflow</code> 属性（父元素添加 <code>overflow:hidden</code>，前提父元素要有宽度）</p><p>缺点：内容增多的时候容易造成不会自动换行导致内容被隐藏掉，无法显示要溢出的元素，不推荐</p><p>3、使用 after 伪元素清除浮动（推荐使用）<code>clearfix</code> 添加给父元素</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">.clearfix:after{</span></span>
<span class="line"><span style="color:#6F42C1;">  content</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  display</span><span style="color:#24292E;">: block;</span></span>
<span class="line"><span style="color:#6F42C1;">  height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  clear</span><span style="color:#24292E;">: both;</span></span>
<span class="line"><span style="color:#6F42C1;">  visibility</span><span style="color:#24292E;">: hidden;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>4.使用 before 和 after 双伪元素清除浮动，同样给父元素添加样式</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">.clearfix:after,.clearfix:before{</span></span>
<span class="line"><span style="color:#6F42C1;">  content</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  display</span><span style="color:#24292E;">: table;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">.clearfix:after{</span></span>
<span class="line"><span style="color:#6F42C1;">  clear</span><span style="color:#24292E;">: both;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="绘制三角形" tabindex="-1">绘制三角形 <a class="header-anchor" href="#绘制三角形" aria-label="Permalink to &quot;绘制三角形&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">.picker {</span></span>
<span class="line"><span style="color:#24292E;">  margin</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">left</span><span style="color:#24292E;">: 8px;</span></span>
<span class="line"><span style="color:#6F42C1;">  position</span><span style="color:#24292E;">: relative;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">.picker::after {</span></span>
<span class="line"><span style="color:#6F42C1;">  position</span><span style="color:#24292E;">: absolute;</span></span>
<span class="line"><span style="color:#6F42C1;">  top</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">45</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  right</span><span style="color:#24292E;">: 20px;</span></span>
<span class="line"><span style="color:#6F42C1;">  content</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  line</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  font</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  border</span><span style="color:#24292E;">: 10px solid transparent;</span></span>
<span class="line"><span style="color:#24292E;">  border</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">top</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">color</span><span style="color:#24292E;">: #bbb;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="css3-过渡" tabindex="-1">CSS3 过渡 <a class="header-anchor" href="#css3-过渡" aria-label="Permalink to &quot;CSS3 过渡&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;"> transition</span><span style="color:#24292E;">: color 0.3s ease</span><span style="color:#D73A49;">-in-</span><span style="color:#24292E;">out 0.5s</span></span>
<span class="line"><span style="color:#6A737D;">//  transition：要过渡的属性 花费时间 运动曲线 何时开始</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>要过渡的属性可以是宽、高或者颜色，如果是所有属性则为 <code>all</code></p><p>花费时间以秒为单位</p><p>运动曲线默认为 <code>ease</code>（渐慢）<code>linear</code>（匀速）<code>ease-in</code>（加速）<code>ease-out</code>（减速）<code>ease-in-out</code>（先加速后减速）</p><p>开始时间，可以延长开始默认为<code> 0s</code></p><h3 id="_2d-转换" tabindex="-1">2D 转换 <a class="header-anchor" href="#_2d-转换" aria-label="Permalink to &quot;2D 转换&quot;">​</a></h3><p>使用 <code>transform</code> 来声明，配合 <code>transition</code> 做一些动画效果</p><p><code>translate</code> 移动 只移动 X 轴 <code>translateX</code>, 移动 Y 轴 <code>translateY</code>,不会影响其其他元素的位置</p><p>rotate 旋转 单位为 deg <code>transform:rotate(7deg)</code> 旋转分为顺时针和逆时针 正数为顺时针 负数为逆时针</p><p>旋转的中心点默认为元素的中心点，改变旋转的中心点使用 <code>transform-origin</code>，可以是像素也可以是方位名词</p><p><code>scale</code> 缩放，里面跟数字不跟单位，同样不会影响其他盒子</p><h3 id="animation-动画" tabindex="-1">animation 动画 <a class="header-anchor" href="#animation-动画" aria-label="Permalink to &quot;animation 动画&quot;">​</a></h3><p><code>animation</code>，相对于过渡可以实现更多效果 <code>animation:mymove 5s infinite</code></p><p>使用<code>@keyframes+动画名</code>定义，使用百分比定义状态</p><p><code>animation-name</code> 调用动画名</p><p><code>animation-duration</code> 持续时间</p><p><code>animation-iteration-count</code> 播放次数 infinite 无限</p><p><code>animation-fill-mode</code> 设置为 forward 可以停止在结束状态</p><p>除了匀速等运动曲线，还可以用步长 steps 来展示</p><p>元素可以添加多个动画，用逗号分隔</p><h3 id="_3d-转换" tabindex="-1">3D 转换 <a class="header-anchor" href="#_3d-转换" aria-label="Permalink to &quot;3D 转换&quot;">​</a></h3><p><code>translate3d</code> 移动</p><p>x，y，z 三轴，xy 和 2D 一样，z 轴要换个透视相结合</p><p>简写用 <code>transla3d</code> 声明，不能省略某个值</p><p>透视 <code>perspective</code></p><p>透视写在被观察的元素的父元素上，透视越小，物体越大</p><p><code>rotate3d</code> 旋转</p><p>绕三个轴旋转</p><p>x 轴旋转方向左手拇指向右，其他四指方向为正方向</p><p>y 轴旋转方向左手拇指想下，其他四指方向为正方向</p><p>z 轴和 2d 旋转一样，比如抽奖的转盘</p><p><code>transform-style</code> 控制子盒子是否保持 3d 空间 <code>preserve-3d</code></p><h2 id="开发技巧" tabindex="-1">开发技巧 <a class="header-anchor" href="#开发技巧" aria-label="Permalink to &quot;开发技巧&quot;">​</a></h2><p>1、logo 里面放一个 <code>h1</code> 标签（利于 SEO），将 logo 设置为背景图</p><p>2、去掉 <code>li</code> 标签前面的自带的小点 <code>list-style：none</code></p><p>3、网站底部推荐使用用 <code>dl+dt+dd</code> 制作</p><p>dl 表示一个定义列表</p><p>dt 表示一个定义的名称，可以理解为词典中的条目</p><p>dd 表示对一个定义的解释，可以理解为词典中对条目的解释</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dl</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">dt</span><span style="color:#24292E;">&gt;标题&lt;/</span><span style="color:#22863A;">dt</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">dd</span><span style="color:#24292E;">&gt;内容1&lt;/</span><span style="color:#22863A;">dd</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">dd</span><span style="color:#24292E;">&gt;内容2&lt;/</span><span style="color:#22863A;">dd</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dl</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>注意</strong></p><p>这三个标签必须同时出现，而且 <code>dt</code>，<code>dd</code> 必须嵌套在 <code>dl</code> 内。</p><p><code>dt</code> 和 <code>dd</code> 是同级关系且多对多的关系，并不是嵌套关系。</p><p><code>dd</code> 必须紧跟在 <code>dt</code> 之后，<code>dd</code> 前可以有多个 <code>dt</code>，但 <code>dd</code> 前面必须至少有一个 <code>dt</code>。dt 后面至少需要有一个 <code>dd</code>。</p><p>4、如果要限制 <code>div</code> 内的图片大小，则直接在样式里面限制即可，设置为容器的 <code>div</code> 宽、高的 100%，注意：如果一个盒子里面只有图片，要将图片宽度设为 100%</p><p>5、如果图片不想和父盒子一起缩放，则不要直接设置宽度，设置最大宽度为 100%。</p><p>6、网页的左上角都有图标叫 faviocn 图标，用比特虫网站将 png 格式转换为 ico 格式即可设置为网页图标</p><p>7、<code>label</code> 标签加 <code>for</code> 可以点击 <code>label</code> 标签从而定位输入框，比如点击姓名，定位姓名的输入框，优化用户体验</p><p>8、精灵图（sprites）将网页的所有小图片整合到一张大图里面去，降低服务器压力，减少请求次数 主要针对背景图进行处理</p><p>9、更改用户鼠标样式，默认为 <code>default</code> 即常规的箭头 <code>pointer</code> 为小手 <code>move</code> 为移动的十字架 <code>text</code> 为文本 <code>not-allowed</code> 为禁止</p><p>10、表单轮廓线去除 <code>outline</code> 改为 <code>none</code> 或 <code>0</code></p><p>11、禁止拖拽文本域（文本域代码最好放在一行，不然会导致光标位置出现问题） <code>resize: none</code></p><p>12、vertical-align 实现垂直居中（只针对行内元素和行内块元素）默认 <code>baseline</code>, <code>top</code> 顶端对齐 <code>middle</code> 居中对齐 <code>bottom</code> 可以底部对齐</p><p>13、图片底部出现缝隙 给图片添加 <code>vertical-align: middle/top/bottom</code> 或 把图片转换为块级元素</p><p>14、溢出的文字省略号显示</p><p>单行文本</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">white</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">space</span><span style="color:#24292E;">: nowrap </span><span style="color:#6A737D;">// 强制一行显示文本</span></span>
<span class="line"><span style="color:#6F42C1;">overflow</span><span style="color:#24292E;">: hidden </span><span style="color:#6A737D;">// 超出部分隐藏</span></span>
<span class="line"><span style="color:#24292E;">text</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">overflow</span><span style="color:#24292E;">: ellipsis  </span><span style="color:#6A737D;">// 超出部分省略号显示</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>多行文本</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">overflow：hidden</span></span>
<span class="line"><span style="color:#24292E;">text</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">overflow：ellipsis</span></span>
<span class="line"><span style="color:#24292E;">display：</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">webkit</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">box </span><span style="color:#6A737D;">// 弹性伸缩盒子模型显示</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">webkit</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">line</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">clamp：</span><span style="color:#005CC5;">2</span><span style="color:#6A737D;"> // 第几行显示省略号</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">webkit</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">box</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">orient：vertical </span><span style="color:#6A737D;">// 设置或检索盒子内子元素的排列方式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>15、<code>filter：blur(5px)</code> 将图像变模糊，数值越大图像越模糊</p><p>16、 <code>calc</code> 函数，做一些<code>+-*/</code>计算 <code>width: calc(100% - 100px)</code></p>`,79)]))}const u=a(l,[["render",o]]);export{y as __pageData,u as default};

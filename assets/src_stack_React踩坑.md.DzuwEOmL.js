import{_ as n,c as a,a2 as l,o as p}from"./chunks/framework.DPuwY6B9.js";const u=JSON.parse('{"title":"React 踩坑","description":"","frontmatter":{},"headers":[],"relativePath":"src/stack/React踩坑.md","filePath":"src/stack/React踩坑.md","lastUpdated":1714114110000}'),e={name:"src/stack/React踩坑.md"};function o(r,s,c,t,i,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="react-踩坑" tabindex="-1">React 踩坑 <a class="header-anchor" href="#react-踩坑" aria-label="Permalink to &quot;React 踩坑&quot;">​</a></h1><h2 id="requset" tabindex="-1">requset <a class="header-anchor" href="#requset" aria-label="Permalink to &quot;requset&quot;">​</a></h2><p>使用 <code>antdPro</code> 内的组件内置 <code>request</code> 时，如果依赖的参数来自外部，可能会触发两次请求，解决方案: 将参数先定义至 <code>params</code>，从 <code>params</code> 内传递给 <code>request</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 使用 params 前</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">ProFormSelect</span></span>
<span class="line"><span style="color:#6F42C1;">  debounceTime</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">  name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;dayoff_id&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">  showSearch</span></span>
<span class="line"><span style="color:#6F42C1;">  label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;标题&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">  request</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> await</span><span style="color:#6F42C1;"> queryByOrgId</span><span style="color:#24292E;">({org_id: id});</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (res?.data) {</span></span>
<span class="line"><span style="color:#24292E;">        arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res.data.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">v</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    　　 label: v.name,</span></span>
<span class="line"><span style="color:#24292E;">    　　 value: v.id</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    return arr;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }}</span></span>
<span class="line"><span style="color:#D73A49;">/&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// 使用 params 后</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">ProFormSelect</span></span>
<span class="line"><span style="color:#6F42C1;">  debounceTime</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">  name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;dayoff_id&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">  showSearch</span></span>
<span class="line"><span style="color:#6F42C1;">  label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;标题&#39;</span><span style="color:#24292E;">　　</span></span>
<span class="line"><span style="color:#6F42C1;">  params</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{id} </span><span style="color:#6A737D;">// 此处重点</span></span>
<span class="line"><span style="color:#6F42C1;">  request</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">id</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 需要传入</span></span>
<span class="line"><span style="color:#D73A49;">    let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> await</span><span style="color:#6F42C1;"> queryByOrgId</span><span style="color:#24292E;">({org_id: id});</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (res?.data) {</span></span>
<span class="line"><span style="color:#24292E;">        arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res.data.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">v</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">            return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            　　 label: v.name,</span></span>
<span class="line"><span style="color:#24292E;">            　　 value: v.id</span></span>
<span class="line"><span style="color:#24292E;">            };</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        return arr;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }}</span></span>
<span class="line"><span style="color:#D73A49;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="proformdependency" tabindex="-1">ProFormDependency <a class="header-anchor" href="#proformdependency" aria-label="Permalink to &quot;ProFormDependency&quot;">​</a></h2><p>使用 <code>ProFormDependency</code> 时，不属于依赖项的值最好不要在内部判断，否则可能导致更新 state 报错</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 错误写法</span></span>
<span class="line"><span style="color:#6A737D;">// 外部 flag</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> flag</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">ProFormDependency</span><span style="color:#6F42C1;"> name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{[</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">]}&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (flag </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;zs&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">            return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#005CC5;">ProFormSelect</span></span>
<span class="line"><span style="color:#6F42C1;">                    options</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{[</span></span>
<span class="line"><span style="color:#24292E;">                        {</span></span>
<span class="line"><span style="color:#24292E;">                        value: </span><span style="color:#032F62;">&#39;chapter&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        label: </span><span style="color:#032F62;">&#39;盖章后生效&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        },</span></span>
<span class="line"><span style="color:#24292E;">                    ]}</span></span>
<span class="line"><span style="color:#6F42C1;">                    label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">\`与《\${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}》合同约定生效方式\`</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">                /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            );</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#005CC5;">ProFormDependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// 正确写法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 外部 flag</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> flag</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> true</span></span>
<span class="line"><span style="color:#24292E;">{ flag </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> &lt;</span><span style="color:#005CC5;">ProFormDependency</span><span style="color:#6F42C1;"> name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{[</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">]}&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#005CC5;">ProFormSelect</span></span>
<span class="line"><span style="color:#6F42C1;">                options</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{[</span></span>
<span class="line"><span style="color:#24292E;">                    {</span></span>
<span class="line"><span style="color:#24292E;">                    value: </span><span style="color:#032F62;">&#39;chapter&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    label: </span><span style="color:#032F62;">&#39;盖章后生效&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    },</span></span>
<span class="line"><span style="color:#24292E;">                ]}</span></span>
<span class="line"><span style="color:#6F42C1;">            　　 label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">\`与《\${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}》合同约定生效方式\`</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">            /&gt;</span></span>
<span class="line"><span style="color:#24292E;">        );</span></span>
<span class="line"><span style="color:#24292E;">    }}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#005CC5;">ProFormDependency</span><span style="color:#24292E;">&gt; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="table" tabindex="-1">table <a class="header-anchor" href="#table" aria-label="Permalink to &quot;table&quot;">​</a></h2><p>table 切换分页数据丢失 加上属性 preserveSelectedRowKeys 即可</p><h2 id="tree" tabindex="-1">tree <a class="header-anchor" href="#tree" aria-label="Permalink to &quot;tree&quot;">​</a></h2><p>递归处理树</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> formatTree</span><span style="color:#D73A49;"> =</span><span style="color:#E36209;"> arr</span><span style="color:#D73A49;"> =&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> arr?.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#D73A49;"> =&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#24292E;"> item?.isLeaf </span><span style="color:#D73A49;">===</span><span style="color:#005CC5;"> false</span></span>
<span class="line"><span style="color:#D73A49;">      ?</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          key: item?.key,</span></span>
<span class="line"><span style="color:#24292E;">          title: item?.title,</span></span>
<span class="line"><span style="color:#24292E;">          valuse: item?.value,</span></span>
<span class="line"><span style="color:#24292E;">          children: </span><span style="color:#6F42C1;">formatTree</span><span style="color:#24292E;">(item?.children),</span></span>
<span class="line"><span style="color:#24292E;">          isLeaf: item?.isLeaf</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#D73A49;">      :</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          key: item?.key,</span></span>
<span class="line"><span style="color:#24292E;">          title: item?.title,</span></span>
<span class="line"><span style="color:#24292E;">          valuse: item?.value,</span></span>
<span class="line"><span style="color:#24292E;">          data: item,</span></span>
<span class="line"><span style="color:#24292E;">          isLeaf: item?.isLeaf</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><p>1、使用 toString()时不能用 null，否则报错，使用 JSON.parse 时不能传入 undefined、空字符串或空对象</p><p>2、使用 useState 的数据时最好做一层深拷贝</p><p>3、useRequest 内的入参可以在 onSuccess 内的第二个参数获取，以数组形式返回</p><p>4、使用 treeSelect 时 如果有为 null 的 key 可能导致展示异常 解决方法 利用 uuid 给一个随机 key</p><p>5、useDispatch 的基本使用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> dispatch</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> useDispatch</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6F42C1;">dispatch</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;labelTask/queryTree&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    payload: userId</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// models.js</span></span>
<span class="line"><span style="color:#6F42C1;">reducers</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#6F42C1;">    setTree</span><span style="color:#24292E;">(state, {patload}) {</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;">{ </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">state, tree: payload }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">effects</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#D73A49;">    *</span><span style="color:#6F42C1;">queryTree</span><span style="color:#24292E;">(action,{call,put}){</span></span>
<span class="line"><span style="color:#D73A49;">        const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">code</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">date</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> yield</span><span style="color:#6F42C1;"> call</span><span style="color:#24292E;">(queryTree, { id:userId })</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> ( code </span><span style="color:#D73A49;">===</span><span style="color:#005CC5;"> 200</span><span style="color:#24292E;"> ) {</span></span>
<span class="line"><span style="color:#D73A49;">            yield</span><span style="color:#6F42C1;"> put</span><span style="color:#24292E;">({ type: </span><span style="color:#032F62;">&#39;setTree&#39;</span><span style="color:#24292E;">, payload: data }) 　　　</span></span>
<span class="line"><span style="color:#24292E;">        } 　</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>6、useSelector 使用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> labelTask</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> useSelector</span><span style="color:#24292E;">(</span><span style="color:#E36209;">state</span><span style="color:#D73A49;"> =&gt;</span><span style="color:#24292E;"> state?.labelTask)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,21)]))}const m=n(e,[["render",o]]);export{u as __pageData,m as default};
